# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
PIPFILE.lock

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to exclude the entire .idea directory.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# ========================
# ML/AI SPECIFIC IGNORES
# ========================

# Model files (very large)
*.bin
*.safetensors
*.pth
*.pt
*.ckpt
*.model
*.pkl
*.pickle

# GGUF model files
*.gguf
*.ggml

# Hugging Face cache
.cache/
**/cache/
huggingface_hub/

# Datasets cache
datasets_cache/
**/dataset_cache/

# Model outputs and checkpoints
outputs/
checkpoints/
runs/
logs/
wandb/
mlruns/

# Saved models directory
models/
saved_models/
mistral_finetuned*/
model_outputs/

# Tensorboard logs
tensorboard_logs/
tb_logs/

# Training artifacts
*.log
training_logs/
loss_logs/

# ========================
# PROJECT SPECIFIC
# ========================

# Large dataset files (keep structure but not content)
*.jsonl
*.json
!sample_data.json
!config.json
!tokenizer.json

# Dataset directory content (preserve folder structure)
Dataset_de_Miramar/*.jsonl
Dataset_de_Miramar/*.json
!Dataset_de_Miramar/README.md
!Dataset_de_Miramar/.gitkeep

# Training outputs in organized folders
RealizarFineTuning/outputs/
RealizarFineTuning/mistral_finetuned*/
outputs/
mistral_finetuned*/

# Downloaded models
model_cache/
model_downloads/

# Temporary files
temp/
tmp/
*.tmp

# Backup files
*.bak
*.backup
*_backup.*

# System files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Local environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# GPU memory dumps
*.gpu
cuda_*

# Compressed files
*.tar.gz
*.zip
*.rar
*.7z
*.7z
ejecutarlocalmente.7z
ejecutarlocalmente.zip
Fine2.7z

# IDE and editor files
*.swp
*.swo
*~

# Local configuration
local_config.py
private_config.py

# Test outputs
test_outputs/
test_results/

# ========================
# CARPETAS ESPEC√çFICAS A IGNORAR
# ========================

# llama.cpp directory
llama.cpp/

# libpostal directory
libpostal/

# Unsloth compiled cache
unsloth_compiled_cache/

# Modelos - mantener estructura pero sin contenido
modelos/*
!modelos/.gitkeep
!modelos/README.md

# VS Code settings
.vscode/

# Virtual environments
.venv/
venv/
env/
